# https://taskfile.dev

version: "3"
silent: true
output: "prefixed"

set: [pipefail]
shopt: [globstar]

vars:
  STAGES:
    - 0-toolchain

  CONTAINER_BUILDER: '{{ .CONTAINER_BUILDER | default "podman" }}'
  CONTAINER_BUILDER_ARGS: ""
  DAEMON_CONTAINER_NAME: buildkitd

tasks:
  start-buildkitd:
    cmds:
      - "{{ .CONTAINER_BUILDER }} {{.CONTAINER_BUILDER_ARGS}} run -d --name {{ .DAEMON_CONTAINER_NAME }} --privileged moby/buildkit:latest"
    # Don't run if daemonless is set or container already exists
    status:
      - "{{ .CONTAINER_BUILDER }} {{.CONTAINER_BUILDER_ARGS}} container inspect {{ .DAEMON_CONTAINER_NAME }} | jq -e '.[0].State.Running'"

  # Each stage is expected to output an image with the name "icaros/{{.NAME}}:latest"
  build:*:
    vars:
      NAME: "{{ index .MATCH 0 }}"
      # TODO: this will need to be OCI at some point
      OUTPUT_TYPE: docker
    label: build:{{ .NAME }}
    prefix: build:{{ .NAME }}
    deps:
      - start-buildkitd
    sources:
      - "{{ .NAME }}/Containerfile"
    cmds:
      - |-
        buildctl \
          --addr={{ .CONTAINER_BUILDER }}-container://{{ .DAEMON_CONTAINER_NAME }} \
          build \
          --frontend gateway.v0 \
          --opt filename=Containerfile \
          --opt source=docker/dockerfile:1.17 \
          --local context=stages/{{ .NAME }} \
          --local dockerfile=stages/{{ .NAME }} \
          --output type={{.OUTPUT_TYPE}},name=icaros/{{ .NAME }}:latest \
            | {{ .CONTAINER_BUILDER }} load

  build:
    cmds:
      - for:
          var: STAGES
        task: build:{{ .ITEM }}

  test:
    aliases:
      - default
    deps:
      - build
    cmds:
      - "{{ .CONTAINER_BUILDER }} run --rm icaros/{{last .STAGES}}:latest"

  clean:
    cmds:
      - rm -r .task || true
