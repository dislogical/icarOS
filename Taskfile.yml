# https://taskfile.dev

version: "3"
silent: true
output: "prefixed"

set: [pipefail]
shopt: [globstar]

vars:
  CONTAINER_BUILDER: '{{ .CONTAINER_BUILDER | default "podman" }}'
  DAEMON_CONTAINER_NAME: buildkitd

tasks:
  start-buildkitd:
    cmds:
      - "{{ .CONTAINER_BUILDER }} run -d --name {{ .DAEMON_CONTAINER_NAME }} --privileged moby/buildkit:latest"
    # Don't run if daemonless is set or container already exists
    status:
      - "{{ .CONTAINER_BUILDER }} container inspect {{ .DAEMON_CONTAINER_NAME }} | jq -e '.[0].State.Running'"

  mkdir-build:
    cmds:
      - mkdir {{ .TASK_DIR }}/build
    status:
      - "[ -d {{ .TASK_DIR }}/build ]"

  build:*:
    vars:
      NAME: "{{ index .MATCH 0 }}"
    label: build:{{ .NAME }}
    prefix: build:{{ .NAME }}
    deps:
      - mkdir-build
    sources:
      - "{{ .NAME }}/Containerfile"
    generates:
      - "{{ .TASK_DIR }}/build/{{ .NAME }}.tar"
    cmds:
      - |-
        buildctl \
          --addr={{ .CONTAINER_BUILDER }}-container://{{ .DAEMON_CONTAINER_NAME }} \
          build \
          --frontend gateway.v0 \
          --opt filename=Containerfile \
          --opt source=docker/dockerfile:1.17 \
          --local context=stages/{{ .NAME }} \
          --local dockerfile=stages/{{ .NAME }} \
          --output type=oci,name=icaros/{{ .NAME }},dest={{ .TASK_DIR }}/build/{{ .NAME }}.tar
      - "{{ .CONTAINER_BUILDER }} load --input {{ .TASK_DIR }}/build/{{ .NAME }}.tar"

  build:
    deps:
      - start-buildkitd
    sources:
      - Containerfile
    generates:
      - build/icaros.tar
    cmds:
      - for:
          - 0-toolchain
        task: build:{{ .ITEM }}

  test:
    aliases:
      - default
    deps:
      - build
    cmds:
      - "{{ .CONTAINER_BUILDER }} run --rm docker.io/icaros/0-toolchain:latest"

  clean:
    cmds:
      - rm -r {{ .TASK_DIR }}/build
